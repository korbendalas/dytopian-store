version: '3.9'

services:
  api:
    build:
      context: ./packages/api
      dockerfile: Dockerfile
    command: npm run start:dev
    ports:
      - "4000:4000"
    env_file: ./packages/api/.env
    depends_on:
      - db
      - redis
    volumes:
      - ./be:/app
      - /app/node_modules

  fe:
    build:
      context: ./packages/fe
      dockerfile: Dockerfile
    command: npm run dev
    ports:
      - "3000:3000"
    env_file: ./packages/fe/.env
    depends_on:
      - api
    volumes:
      - ./fe:/app
      - /app/node_modules

  db:
    image: postgres
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASS}
      POSTGRES_DB: ${DB_NAME}
    ports:
      - "5432:5432"
    env_file:
      - ./packages/api/.env
    volumes:
      - db-data-user-software:/var/lib/postgresql/data

  db-test:
    image: postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: postgres-test
    ports:
      - "5430:5432"
    volumes:
      - db-test-data-user-software:/var/lib/postgresql/data

  redis:
    image: redis:7.0
    container_name: redis-store
    restart: unless-stopped
    ports:
      - "6379:6379"
  redis-commander:
    image: rediscommander/redis-commander:latest
    container_name: redis-commander
    restart: unless-stopped
    ports:
      - "8081:8081"
    environment:
      - REDIS_HOSTS=local:redis:6379

volumes:
  db-data-user-software:
  db-test-data-user-software:
