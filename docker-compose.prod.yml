version: '3.9'

services:
  db:
    image: postgres:13.4-bullseye
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASS}
      POSTGRES_DB: ${DB_NAME}
    ports:
      - "5432:5432"
    volumes:
      - db-data-user-software:/var/lib/postgresql/data


  db-test:
    image: postgres:13.4-bullseye
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: postgres-test
    ports:
      - "5430:5432"
    volumes:
      - db-test-data-user-software:/var/lib/postgresql/data


  redis:
    image: redis:7.0
    container_name: redis-store
    restart: unless-stopped
    ports:
      - "6379:6379"


  redis-commander:
    image: rediscommander/redis-commander:latest
    container_name: redis-commander
    restart: unless-stopped
    ports:
      - "8081:8081"
    environment:
      - REDIS_HOSTS=local:redis:6379

  # Frontend service
  frontend:
    build:
      dockerfile: packages/fe/Dockerfile  # The Dockerfile for your frontend
    ports:
      - "80:80"

  # Backend service
  api:
    build:
      dockerfile: packages/api/Dockerfile  # The Dockerfile for your backend
#    environment:
    # Set your environment variables here
    ports:
      - "4000:4000"

volumes:
  db-data-user-software:
  db-test-data-user-software:
